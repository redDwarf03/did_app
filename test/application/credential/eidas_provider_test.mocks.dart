// Mocks generated by Mockito 5.4.5 from annotations
// in did_app/test/application/credential/eidas_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:did_app/domain/credential/credential.dart' as _i2;
import 'package:did_app/domain/credential/eidas_credential.dart' as _i8;
import 'package:did_app/domain/verification/verification_result.dart' as _i3;
import 'package:did_app/infrastructure/credential/eidas_credential_service.dart'
    as _i5;
import 'package:did_app/infrastructure/credential/eidas_trust_list.dart' as _i9;
import 'package:did_app/infrastructure/credential/revocation_status.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCredential_0 extends _i1.SmartFake implements _i2.Credential {
  _FakeCredential_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeVerificationResult_1 extends _i1.SmartFake
    implements _i3.VerificationResult {
  _FakeVerificationResult_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRevocationStatus_2 extends _i1.SmartFake
    implements _i4.RevocationStatus {
  _FakeRevocationStatus_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [EidasCredentialService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEidasCredentialService extends _i1.Mock
    implements _i5.EidasCredentialService {
  MockEidasCredentialService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Credential?> importFromJson(String? jsonString) =>
      (super.noSuchMethod(
            Invocation.method(#importFromJson, [jsonString]),
            returnValue: _i6.Future<_i2.Credential?>.value(),
          )
          as _i6.Future<_i2.Credential?>);

  @override
  _i6.Future<String> exportToJson(_i2.Credential? credential) =>
      (super.noSuchMethod(
            Invocation.method(#exportToJson, [credential]),
            returnValue: _i6.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#exportToJson, [credential]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  bool isEidasCompatible(_i2.Credential? credential) =>
      (super.noSuchMethod(
            Invocation.method(#isEidasCompatible, [credential]),
            returnValue: false,
          )
          as bool);

  @override
  _i6.Future<_i2.Credential> makeEidasCompatible(_i2.Credential? credential) =>
      (super.noSuchMethod(
            Invocation.method(#makeEidasCompatible, [credential]),
            returnValue: _i6.Future<_i2.Credential>.value(
              _FakeCredential_0(
                this,
                Invocation.method(#makeEidasCompatible, [credential]),
              ),
            ),
          )
          as _i6.Future<_i2.Credential>);

  @override
  _i6.Future<bool> shareWithEudiWallet(_i2.Credential? credential) =>
      (super.noSuchMethod(
            Invocation.method(#shareWithEudiWallet, [credential]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i2.Credential?> importFromEudiWallet() =>
      (super.noSuchMethod(
            Invocation.method(#importFromEudiWallet, []),
            returnValue: _i6.Future<_i2.Credential?>.value(),
          )
          as _i6.Future<_i2.Credential?>);

  @override
  _i6.Future<_i3.VerificationResult> verifyEidasCredential(
    _i8.EidasCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#verifyEidasCredential, [credential]),
            returnValue: _i6.Future<_i3.VerificationResult>.value(
              _FakeVerificationResult_1(
                this,
                Invocation.method(#verifyEidasCredential, [credential]),
              ),
            ),
          )
          as _i6.Future<_i3.VerificationResult>);

  @override
  _i6.Future<_i4.RevocationStatus> checkRevocationStatus(
    _i8.EidasCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#checkRevocationStatus, [credential]),
            returnValue: _i6.Future<_i4.RevocationStatus>.value(
              _FakeRevocationStatus_2(
                this,
                Invocation.method(#checkRevocationStatus, [credential]),
              ),
            ),
          )
          as _i6.Future<_i4.RevocationStatus>);
}

/// A class which mocks [EidasCredentialService].
///
/// See the documentation for Mockito's code generation for more information.
class GenMockEidasCredentialService extends _i1.Mock
    implements _i5.EidasCredentialService {
  GenMockEidasCredentialService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Credential?> importFromJson(String? jsonString) =>
      (super.noSuchMethod(
            Invocation.method(#importFromJson, [jsonString]),
            returnValue: _i6.Future<_i2.Credential?>.value(),
          )
          as _i6.Future<_i2.Credential?>);

  @override
  _i6.Future<String> exportToJson(_i2.Credential? credential) =>
      (super.noSuchMethod(
            Invocation.method(#exportToJson, [credential]),
            returnValue: _i6.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#exportToJson, [credential]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  bool isEidasCompatible(_i2.Credential? credential) =>
      (super.noSuchMethod(
            Invocation.method(#isEidasCompatible, [credential]),
            returnValue: false,
          )
          as bool);

  @override
  _i6.Future<_i2.Credential> makeEidasCompatible(_i2.Credential? credential) =>
      (super.noSuchMethod(
            Invocation.method(#makeEidasCompatible, [credential]),
            returnValue: _i6.Future<_i2.Credential>.value(
              _FakeCredential_0(
                this,
                Invocation.method(#makeEidasCompatible, [credential]),
              ),
            ),
          )
          as _i6.Future<_i2.Credential>);

  @override
  _i6.Future<bool> shareWithEudiWallet(_i2.Credential? credential) =>
      (super.noSuchMethod(
            Invocation.method(#shareWithEudiWallet, [credential]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i2.Credential?> importFromEudiWallet() =>
      (super.noSuchMethod(
            Invocation.method(#importFromEudiWallet, []),
            returnValue: _i6.Future<_i2.Credential?>.value(),
          )
          as _i6.Future<_i2.Credential?>);

  @override
  _i6.Future<_i3.VerificationResult> verifyEidasCredential(
    _i8.EidasCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#verifyEidasCredential, [credential]),
            returnValue: _i6.Future<_i3.VerificationResult>.value(
              _FakeVerificationResult_1(
                this,
                Invocation.method(#verifyEidasCredential, [credential]),
              ),
            ),
          )
          as _i6.Future<_i3.VerificationResult>);

  @override
  _i6.Future<_i4.RevocationStatus> checkRevocationStatus(
    _i8.EidasCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#checkRevocationStatus, [credential]),
            returnValue: _i6.Future<_i4.RevocationStatus>.value(
              _FakeRevocationStatus_2(
                this,
                Invocation.method(#checkRevocationStatus, [credential]),
              ),
            ),
          )
          as _i6.Future<_i4.RevocationStatus>);
}

/// A class which mocks [EidasTrustList].
///
/// See the documentation for Mockito's code generation for more information.
class MockEidasTrustList extends _i1.Mock implements _i9.EidasTrustList {
  MockEidasTrustList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> updateTrustedIssuer(_i9.TrustedIssuer? issuer) =>
      (super.noSuchMethod(
            Invocation.method(#updateTrustedIssuer, [issuer]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateTrustList(List<_i9.TrustedIssuer>? issuers) =>
      (super.noSuchMethod(
            Invocation.method(#updateTrustList, [issuers]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> isIssuerTrusted(String? issuerId) =>
      (super.noSuchMethod(
            Invocation.method(#isIssuerTrusted, [issuerId]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i9.TrustedIssuer?> getTrustedIssuer(String? issuerId) =>
      (super.noSuchMethod(
            Invocation.method(#getTrustedIssuer, [issuerId]),
            returnValue: _i6.Future<_i9.TrustedIssuer?>.value(),
          )
          as _i6.Future<_i9.TrustedIssuer?>);

  @override
  _i6.Future<List<_i9.TrustedIssuer>> getAllTrustedIssuers() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTrustedIssuers, []),
            returnValue: _i6.Future<List<_i9.TrustedIssuer>>.value(
              <_i9.TrustedIssuer>[],
            ),
          )
          as _i6.Future<List<_i9.TrustedIssuer>>);

  @override
  _i6.Future<List<_i9.TrustedIssuer>> getTrustedIssuersByLevel(
    _i9.TrustLevel? level,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTrustedIssuersByLevel, [level]),
            returnValue: _i6.Future<List<_i9.TrustedIssuer>>.value(
              <_i9.TrustedIssuer>[],
            ),
          )
          as _i6.Future<List<_i9.TrustedIssuer>>);

  @override
  _i6.Future<List<_i9.TrustedIssuer>> getTrustedIssuersByCountry(
    String? countryCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTrustedIssuersByCountry, [countryCode]),
            returnValue: _i6.Future<List<_i9.TrustedIssuer>>.value(
              <_i9.TrustedIssuer>[],
            ),
          )
          as _i6.Future<List<_i9.TrustedIssuer>>);

  @override
  _i6.Future<List<_i9.TrustedIssuer>> getTrustedIssuersByServiceType(
    String? serviceType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTrustedIssuersByServiceType, [serviceType]),
            returnValue: _i6.Future<List<_i9.TrustedIssuer>>.value(
              <_i9.TrustedIssuer>[],
            ),
          )
          as _i6.Future<List<_i9.TrustedIssuer>>);

  @override
  _i6.Future<bool> removeTrustedIssuer(String? issuerId) =>
      (super.noSuchMethod(
            Invocation.method(#removeTrustedIssuer, [issuerId]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<DateTime?> getLastSyncDate() =>
      (super.noSuchMethod(
            Invocation.method(#getLastSyncDate, []),
            returnValue: _i6.Future<DateTime?>.value(),
          )
          as _i6.Future<DateTime?>);

  @override
  _i6.Future<void> refreshTrustList() =>
      (super.noSuchMethod(
            Invocation.method(#refreshTrustList, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  String exportTrustedIssuerToEidas(_i9.TrustedIssuer? issuer) =>
      (super.noSuchMethod(
            Invocation.method(#exportTrustedIssuerToEidas, [issuer]),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.method(#exportTrustedIssuerToEidas, [issuer]),
            ),
          )
          as String);

  @override
  _i6.Future<Map<String, dynamic>> generateTrustListReport() =>
      (super.noSuchMethod(
            Invocation.method(#generateTrustListReport, []),
            returnValue: _i6.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i6.Future<Map<String, dynamic>>);
}
